<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>messengerWeb</title>
    <link rel="stylesheet" href="style.css">
    <link rel = 'icon' href="logo.png">
</head>
<body>
<%- include('header') %>
<main>
    <%- include('menubar') %>
    <aside id="recentChats">
        <center>
           <div id="bigPlate"></div>
        <p>Enjoy chating with friends on messenger! <br> <svg xmlns="http://www.w3.org/2000/svg" width="36" height="36" fill="currentColor" class="bi bi-cloud-haze2" viewBox="0 0 16 16">
            <path d="M8.5 3a4 4 0 0 0-3.8 2.745.5.5 0 1 1-.949-.313 5.002 5.002 0 0 1 9.654.595A3 3 0 0 1 13 12H4.5a.5.5 0 0 1 0-1H13a2 2 0 0 0 .001-4h-.026a.5.5 0 0 1-.5-.445A4 4 0 0 0 8.5 3M0 7.5A.5.5 0 0 1 .5 7h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5m2 2a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5m-2 4a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5"/>
          </svg></p>
        </center>
    </aside>
    <div id="chatingWith"></div>
    <div id="composedChat">
    </div>
    <form action="http://localhost:3000/message" method="post" id="messageForm">
        <!-- Hidden field to hold the username -->
        <input type="text" name="from" id="from" style="display: none;">
        <input type="text" name="to" id="to" style="display: none;">
        <input type="text" name="message" placeholder="Text your friend" oninput="setValues()">
        <button type="submit">
            <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-send" viewBox="0 0 16 16">
                <path d="M15.854.146a.5.5 0 0 1 .11.54l-5.819 14.547a.75.75 0 0 1-1.329.124l-3.178-4.995L.643 7.184a.75.75 0 0 1 .124-1.33L15.314.037a.5.5 0 0 1 .54.11ZM6.636 10.07l2.761 4.338L14.13 2.576zm6.787-8.201L1.591 6.602l4.339 2.76z"/>
            </svg>
        </button>
    </form>
    
</main>
    <footer id="foot">
        &copy; Alright reserved by developer 
    </footer>
    <style>
        form input{
            height: 4rem;
            width: 66%;
            background-color: black;
            color: aliceblue;
            padding-left: 30px;
            border-radius: 4rem;
            position: absolute;
            bottom: 0px;
            border: 1px solid black;
            margin-left: 4rem;
            margin-top: 20px;
        }
        form button{
            position: absolute;
            bottom: 4.7rem;
            left: 3rem;
            background-color: rgba(0, 0, 0, 0.034);
            border: 0px;
            color: aliceblue;
        }
        form input:focus{
            border: 1px solid black;
            background-color: rgb(17, 17, 17);
            outline: none;
        }
    </style>
    <script>
        (async()=>{
            var preW = "<%= to %>";
            localStorage.setItem('to',preW);
            var pgeFrom = "<%= pageFrom %>";
            if(pgeFrom == 'message'){
            window.location.href = `http://localhost:3000/toChat?to=${localStorage.getItem('to')}`;
            }
        })();
         function setValues(){
             const userName = localStorage.getItem('userName');
            if (userName) {
                document.getElementById('from').value = userName;
                document.getElementById('to').value = localStorage.getItem('to');
            }
        }
        var userData ='';
        (async()=>{
            var logStatus = localStorage.getItem('logStatus');
        var author = localStorage.getItem('author');
        var Data =localStorage.getItem('userData');
        document.getElementById('foot').innerTEXT += author;
        var preResult = await fetch(`http://localhost:3000/userData?id=${Data}`);
        userData = await preResult.json();
        if(logStatus != 'done'){
            document.getElementById('bigPlate').innerHTML += `<div id="bigProfile">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-person-fill-exclamation" viewBox="0 0 16 16">
            <path d="M11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0m-9 8c0 1 1 1 1 1h5.256A4.5 4.5 0 0 1 8 12.5a4.5 4.5 0 0 1 1.544-3.393Q8.844 9.002 8 9c-5 0-6 3-6 4"/>
            <path d="M16 12.5a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0m-3.5-2a.5.5 0 0 0-.5.5v1.5a.5.5 0 0 0 1 0V11a.5.5 0 0 0-.5-.5m0 4a.5.5 0 1 0 0-1 .5.5 0 0 0 0 1"/>
          </svg>
    </div>`;
        }
        else{
            var image = userData[0].profile;
            var newD = document.createElement('div');
            newD.id = 'bigProfile';
            newD.innerHTML = `<img src='${image}' alt="" srcset="">`;
            document.getElementById('bigPlate').appendChild(newD);
            //document.getElementById('leftHeader').innerHTML += `<div id="profile"><img src=${image} alt="" srcset=""></div>`;
        }
           var paper = document.getElementById('composedChat');
            document.getElementById('composedChat').innerHTML = '';
           var user_name = localStorage.getItem('userName');
           var chatWithName = localStorage.getItem('to');
           var preChat = await fetch(`http://localhost:3000/getChat?names=${user_name}&&to=${chatWithName}`);
           var chats = await preChat.json();

            try{
            chats.forEach(chat => {
                if(chat.message_from == user_name){
                    var iDiv = document.createElement('div');
                    iDiv.className = 'iTell';
                    iDiv.innerHTML = `<p> ${chat.message} <br><svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" fill="currentColor" class="bi bi-chat-right-text" viewBox="0 0 16 16">
    <path d="M2 1a1 1 0 0 0-1 1v8a1 1 0 0 0 1 1h9.586a2 2 0 0 1 1.414.586l2 2V2a1 1 0 0 0-1-1zm12-1a2 2 0 0 1 2 2v12.793a.5.5 0 0 1-.854.353l-2.853-2.853a1 1 0 0 0-.707-.293H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2z"/>
    <path d="M3 3.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5M3 6a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9A.5.5 0 0 1 3 6m0 2.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5"/>
  </svg></p>`;
                    paper.appendChild(iDiv);
                }
                else{
                    var iDiv = document.createElement('div');
                    iDiv.className = 'youTell';
                    iDiv.innerHTML = `<p> ${chat.message} <br><svg xmlns="http://www.w3.org/2000/svg" width="26" height="26" fill="currentColor" class="bi bi-chat-right-text-fill" viewBox="0 0 16 16">
    <path d="M16 2a2 2 0 0 0-2-2H2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h9.586a1 1 0 0 1 .707.293l2.853 2.853a.5.5 0 0 0 .854-.353zM3.5 3h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1 0-1m0 2.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1 0-1m0 2.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1 0-1"/>
  </svg></p>`;
                    paper.appendChild(iDiv);
                }
            });
            
        var chatWithInfo = await fetch(`http://localhost:3000/getChatWith?names=${chatWithName}`);
        var meaningfulInfo = await chatWithInfo.json();
        document.getElementById('chatingWith').innerHTML = `<img src =${meaningfulInfo[0].profile}>`;
        //custom real time message tracking

        var affected = chats.length;
            localStorage.setItem('affected',affected);
            for(let i=0;i>-1;i++){
                var preFect = await fetch(`http://localhost:3000/RTOS?names=${localStorage.getItem('userName')}&&to=${localStorage.getItem('to')}`);
                var affectedRows = await preFect.text();
                if(parseInt(affectedRows) > affected){
                    window.location.href = `http://localhost:3000/toChat?to=${localStorage.getItem('to')}`;
                }
            }
        }
            catch(err){
                console.log(err);
            }
        })();
    </script>
</body>
</html>